#Questão 10 - Junte os dataframes hero_powers e hero_info em um chamado hero usando inner_join
names(hero_info)[2] <- "hero_names"
(hero <- inner_join(hero_info,hero_powers,by="hero_names"))
#QUestão 11 - No dataframe hero, calcule o percentual de herois de cada editora que são telepatas
telepatas <- hero %>% select(-1) %>% summarise_if(is.logical, sum)
t(telepatas)*100/nrow(hero)
view(hero)
telepatas <- hero %>% select(-14) %>% summarise_if(is.logical, sum)
t(telepatas)*100/nrow(hero)
telepatas <- hero %>% select(-1) %>% summarise_if(is.logical, sum)
telepatas <- hero %>% select(-14) %>% mutate_all(as.logical) %>%
summarise_if(is.logical, sum)
t(telepatas)*100/nrow(hero)
t(telepatas)*100/nrow(telepatas)
telepatas <- hero %>% select(-14) %>% mutate_all(as.logical) %>%
summarise_if(is.logical, sum)
t(telepatas)*100/nrow(telepatas)
telepatas <- hero %>% select(30) %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher)
telepatas <- hero %>% select(-14) %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher)
telepatas
hero %>%
filter(telepathy==TRUE) %>%
group_by(publisher_new) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
hero %>%
filter(telepathy==TRUE) %>%
group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
#Exercícios do livro de Visualização de Dados em R do Sillas Gonzaga
#Questão 0 - Carregando bibliotecas
library(tidyverse)
library(janitor)
library(dplyr)
library(readr)
library(tibble)
#Questão 1 - Carregando bases de dados
hero_powers <- read.csv('super_hero_powers.csv',na=c("","-","NA"))
hero_info <- read.csv('heroes_information.csv',na=c("","-","NA"))
#Questão 2 - Limpando nomes das colunas
names(hero_powers)
names(hero_info)
hero_powers <- clean_names(hero_powers)
hero_info <- clean_names(hero_info)
#Questão 3 - Remover a primeira coluna de hero_info
select(hero_info,-1)
#Questão 4 - Converter todas as colunas com exceção da primeira para o tipo logical
hero_powers_logical <- hero_powers %>% select(-1) %>% mutate_all(as.logical)
#Questão 5 - Agrupar as editoras em Marvel, DC e Outros
glimpse(hero_info)
hero_info %>% distinct(publisher)
hero_info <- hero_info %>%
mutate(publisher = case_when( publisher == "Marvel Comics" ~ "Marvel",
publisher == "DC Comics" ~ "DC",
publisher != c("Marvel Comics","DC Comics") ~ "Outros"
))
hero_info %>% count(publisher)
#Questão 6 - Definir quais são as raças exclusivas de cada editora
race_dc <- hero_info %>% filter(publisher == "DC") %>% distinct(race)
race_marvel <- hero_info %>% filter(publisher == "Marvel") %>% distinct(race)
#Questão 7 - Filtar o top 3 de cores de olhos mais comuns para cada sexo
top_male <- hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
filter(n>36)
top_female <- hero_info %>% filter(gender == "Female") %>% count(eye_color) %>%
filter(n>14)
#Questão 8 - Calcule o percentual de hérois que possuem cada habilidade descrita nas colunas
hab <- hero_powers_logical %>% select(-1) %>% summarise_if(is.logical, sum)
t(hab)*100/nrow(hero_powers)
#Questão 9 - Repita o item anterior com uma abordagem tidy
hero_powers %>%
gather("poder","possui_poder",-hero_names) %>%
group_by(poder, possui_poder) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n) * 100)
#Questão 10 - Junte os dataframes hero_powers e hero_info em um chamado hero usando inner_join
names(hero_info)[2] <- "hero_names"
(hero <- inner_join(hero_info,hero_powers,by="hero_names"))
#QUestão 11 - No dataframe hero, calcule o percentual de herois de cada editora que são telepatas
hero %>%
filter(telepathy==TRUE) %>%
group_by(publisher_new) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
#Exercícios do livro de Visualização de Dados em R do Sillas Gonzaga
#Questão 0 - Carregando bibliotecas
library(tidyverse)
library(janitor)
library(dplyr)
library(readr)
library(tibble)
#Questão 1 - Carregando bases de dados
hero_powers <- read.csv('super_hero_powers.csv',na=c("","-","NA"))
hero_info <- read.csv('heroes_information.csv',na=c("","-","NA"))
#Questão 2 - Limpando nomes das colunas
names(hero_powers)
names(hero_info)
hero_powers <- clean_names(hero_powers)
hero_info <- clean_names(hero_info)
#Questão 3 - Remover a primeira coluna de hero_info
select(hero_info,-1)
#Questão 4 - Converter todas as colunas com exceção da primeira para o tipo logical
hero_powers_logical <- hero_powers %>% select(-1) %>% mutate_all(as.logical)
#Questão 5 - Agrupar as editoras em Marvel, DC e Outros
glimpse(hero_info)
hero_info %>% distinct(publisher)
hero_info <- hero_info %>%
mutate(publisher = case_when( publisher == "Marvel Comics" ~ "Marvel",
publisher == "DC Comics" ~ "DC",
publisher != c("Marvel Comics","DC Comics") ~ "Outros"
))
hero_info %>% count(publisher)
#Questão 6 - Definir quais são as raças exclusivas de cada editora
race_dc <- hero_info %>% filter(publisher == "DC") %>% distinct(race)
race_marvel <- hero_info %>% filter(publisher == "Marvel") %>% distinct(race)
#Questão 7 - Filtar o top 3 de cores de olhos mais comuns para cada sexo
top_male <- hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
filter(n>36)
top_female <- hero_info %>% filter(gender == "Female") %>% count(eye_color) %>%
filter(n>14)
#Questão 8 - Calcule o percentual de hérois que possuem cada habilidade descrita nas colunas
hab <- hero_powers_logical %>% select(-1) %>% summarise_if(is.logical, sum)
t(hab)*100/nrow(hero_powers)
#Questão 9 - Repita o item anterior com uma abordagem tidy
hero_powers %>%
gather("poder","possui_poder",-hero_names) %>%
group_by(poder, possui_poder) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n) * 100)
#Questão 10 - Junte os dataframes hero_powers e hero_info em um chamado hero usando inner_join
names(hero_info)[2] <- "hero_names"
(hero <- inner_join(hero_info,hero_powers,by="hero_names"))
#QUestão 11 - No dataframe hero, calcule o percentual de herois de cada editora que são telepatas
hero %>%
filter(telepathy==TRUE) %>%
group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
hero %>% filter(telepathy==TRUE) %>% group_by(publisher)
telep <- hero %>% filter(telepathy==TRUE) %>% group_by(publisher)
telep
telep <- hero %>% select(-14) %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher)
telep
telep <- hero %>% select(-14) %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep
#Exercícios do livro de Visualização de Dados em R do Sillas Gonzaga
#Questão 0 - Carregando bibliotecas
library(tidyverse)
library(janitor)
library(dplyr)
library(readr)
library(tibble)
#Questão 1 - Carregando bases de dados
hero_powers <- read.csv('super_hero_powers.csv',na=c("","-","NA"))
hero_info <- read.csv('heroes_information.csv',na=c("","-","NA"))
#Questão 2 - Limpando nomes das colunas
names(hero_powers)
names(hero_info)
hero_powers <- clean_names(hero_powers)
hero_info <- clean_names(hero_info)
#Questão 3 - Remover a primeira coluna de hero_info
select(hero_info,-1)
#Questão 4 - Converter todas as colunas com exceção da primeira para o tipo logical
hero_powers_logical <- hero_powers %>% select(-1) %>% mutate_all(as.logical)
#Questão 5 - Agrupar as editoras em Marvel, DC e Outros
glimpse(hero_info)
hero_info %>% distinct(publisher)
hero_info <- hero_info %>%
mutate(publisher = case_when( publisher == "Marvel Comics" ~ "Marvel",
publisher == "DC Comics" ~ "DC",
publisher != c("Marvel Comics","DC Comics") ~ "Outros"
))
hero_info %>% count(publisher)
#Questão 6 - Definir quais são as raças exclusivas de cada editora
race_dc <- hero_info %>% filter(publisher == "DC") %>% distinct(race)
race_marvel <- hero_info %>% filter(publisher == "Marvel") %>% distinct(race)
#Questão 7 - Filtar o top 3 de cores de olhos mais comuns para cada sexo
top_male <- hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
filter(n>36)
top_female <- hero_info %>% filter(gender == "Female") %>% count(eye_color) %>%
filter(n>14)
#Questão 8 - Calcule o percentual de hérois que possuem cada habilidade descrita nas colunas
hab <- hero_powers_logical %>% select(-1) %>% summarise_if(is.logical, sum)
t(hab)*100/nrow(hero_powers)
#Questão 9 - Repita o item anterior com uma abordagem tidy
hero_powers %>%
gather("poder","possui_poder",-hero_names) %>%
group_by(poder, possui_poder) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n) * 100)
#Questão 10 - Junte os dataframes hero_powers e hero_info em um chamado hero usando inner_join
names(hero_info)[2] <- "hero_names"
(hero <- inner_join(hero_info,hero_powers,by="hero_names"))
#QUestão 11 - No dataframe hero, calcule o percentual de herois de cada editora que são telepatas
telep <- hero %>% select(-14) %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep
hero$publisher
telep <- hero %>%
filter(telepathy==TRUE) %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep
telep <- hero %>%
filter(telepathy==TRUE) %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep
telep <- hero %>% select(-1) %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep
names(hero)[30] <- "telepatas"
names(hero)[30] <- "telepatas"
telep <- hero %>% select("telepatas") %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
view(telepatas)
#Exercícios do livro de Visualização de Dados em R do Sillas Gonzaga
#Questão 0 - Carregando bibliotecas
library(tidyverse)
library(janitor)
library(dplyr)
library(readr)
library(tibble)
#Questão 1 - Carregando bases de dados
hero_powers <- read.csv('super_hero_powers.csv',na=c("","-","NA"))
hero_info <- read.csv('heroes_information.csv',na=c("","-","NA"))
#Questão 2 - Limpando nomes das colunas
names(hero_powers)
names(hero_info)
hero_powers <- clean_names(hero_powers)
hero_info <- clean_names(hero_info)
#Questão 3 - Remover a primeira coluna de hero_info
select(hero_info,-1)
#Questão 4 - Converter todas as colunas com exceção da primeira para o tipo logical
hero_powers_logical <- hero_powers %>% select(-1) %>% mutate_all(as.logical)
#Questão 5 - Agrupar as editoras em Marvel, DC e Outros
glimpse(hero_info)
hero_info %>% distinct(publisher)
hero_info <- hero_info %>%
mutate(publisher = case_when( publisher == "Marvel Comics" ~ "Marvel",
publisher == "DC Comics" ~ "DC",
publisher != c("Marvel Comics","DC Comics") ~ "Outros"
))
hero_info %>% count(publisher)
#Questão 6 - Definir quais são as raças exclusivas de cada editora
race_dc <- hero_info %>% filter(publisher == "DC") %>% distinct(race)
race_marvel <- hero_info %>% filter(publisher == "Marvel") %>% distinct(race)
#Questão 7 - Filtar o top 3 de cores de olhos mais comuns para cada sexo
top_male <- hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
filter(n>36)
top_female <- hero_info %>% filter(gender == "Female") %>% count(eye_color) %>%
filter(n>14)
#Questão 8 - Calcule o percentual de hérois que possuem cada habilidade descrita nas colunas
hab <- hero_powers_logical %>% select(-1) %>% summarise_if(is.logical, sum)
t(hab)*100/nrow(hero_powers)
#Questão 9 - Repita o item anterior com uma abordagem tidy
hero_powers %>%
gather("poder","possui_poder",-hero_names) %>%
group_by(poder, possui_poder) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n) * 100)
#Questão 10 - Junte os dataframes hero_powers e hero_info em um chamado hero usando inner_join
names(hero_info)[2] <- "hero_names"
(hero <- inner_join(hero_info,hero_powers,by="hero_names"))
#QUestão 11 - No dataframe hero, calcule o percentual de herois de cada editora que são telepatas
telep <- hero %>% select("telepatas") %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep <- hero %>% mutate_all(as.logical) %>%
filter(telepathy==TRUE) %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep
telep <- hero %>%
filter(telepathy="True") %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep <- hero %>%
filter(telepathy=="True") %>% group_by(publisher) %>%
summarise(n = n()) %>%
mutate(freq_telepathy = n / sum(n) * 100) %>%
ungroup()
telep
telep <- hero %>% filter(telepathy=="True") %>% group_by(publisher) %>%
summarise(n = n()) %>% mutate(freq_telepathy = n / sum(n) * 100)
telep
telepatas <- hero %>% filter(telepathy=="True") %>% group_by(publisher) %>%
summarise(n = n()) %>% mutate(freq_telepathy = n / sum(n) * 100)
telepatas
telepatas <- hero %>% filter(telepathy=="True") %>% group_by(publisher) %>%
summarise(n = n()) %>% mutate(freq_telepathy = n / sum(n))
telepatas
hero %>%
select(hero_names,publisher,flight,weight) %>%
filter(flight==TRUE) %>% top_n(weight, n=10) %>%
arrange(desc(weight))
hero %>% select(hero_names,publisher,flight,weight) %>% filter(flight=="True") %>% top_n(weight, n=10) %>%
arrange(desc(weight))
top_male <- hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
top_n(eye_color, n=3)
top_male
top_male <- hero_info %>% filter(gender == "Male") %>% top_n(eye_color, n=3)
top_male
#Exercícios do livro de Visualização de Dados em R do Sillas Gonzaga
#Questão 0 - Carregando bibliotecas
library(tidyverse)
library(janitor)
library(dplyr)
library(readr)
library(tibble)
#Questão 1 - Carregando bases de dados
hero_powers <- read.csv('super_hero_powers.csv',na=c("","-","NA"))
hero_info <- read.csv('heroes_information.csv',na=c("","-","NA"))
#Questão 2 - Limpando nomes das colunas
names(hero_powers)
names(hero_info)
hero_powers <- clean_names(hero_powers)
hero_info <- clean_names(hero_info)
#Questão 3 - Remover a primeira coluna de hero_info
select(hero_info,-1)
#Questão 4 - Converter todas as colunas com exceção da primeira para o tipo logical
hero_powers_logical <- hero_powers %>% select(-1) %>% mutate_all(as.logical)
#Questão 5 - Agrupar as editoras em Marvel, DC e Outros
glimpse(hero_info)
hero_info %>% distinct(publisher)
hero_info <- hero_info %>%
mutate(publisher = case_when( publisher == "Marvel Comics" ~ "Marvel",
publisher == "DC Comics" ~ "DC",
publisher != c("Marvel Comics","DC Comics") ~ "Outros"
))
hero_info %>% count(publisher)
#Questão 6 - Definir quais são as raças exclusivas de cada editora
race_dc <- hero_info %>% filter(publisher == "DC") %>% distinct(race)
race_marvel <- hero_info %>% filter(publisher == "Marvel") %>% distinct(race)
#Questão 7 - Filtar o top 3 de cores de olhos mais comuns para cada sexo
top_male <- hero_info %>% filter(gender == "Male") %>% top_n(eye_color, n=3)
top_female <- hero_info %>% filter(gender == "Female") %>% count(eye_color) %>%
filter(n>14)
#Questão 8 - Calcule o percentual de hérois que possuem cada habilidade descrita nas colunas
hab <- hero_powers_logical %>% select(-1) %>% summarise_if(is.logical, sum)
t(hab)*100/nrow(hero_powers)
#Questão 9 - Repita o item anterior com uma abordagem tidy
hero_powers %>%
gather("poder","possui_poder",-hero_names) %>%
group_by(poder, possui_poder) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n) * 100)
#Questão 10 - Junte os dataframes hero_powers e hero_info em um chamado hero usando inner_join
names(hero_info)[2] <- "hero_names"
(hero <- inner_join(hero_info,hero_powers,by="hero_names"))
#Questão 11 - No dataframe hero, calcule o percentual de herois de cada editora que são telepatas
telepatas <- hero %>% filter(telepathy=="True") %>% group_by(publisher) %>%
summarise(n = n()) %>% mutate(freq_telepathy = n / sum(n))
#Questão 12 - No dataframe hero, selecione as colunas name, publisher, flight e weight, filtre os heróis que podem voar e retorne os 10 de maior peso.
hero %>% select(hero_names,publisher,flight,weight) %>% filter(flight=="True") %>%
top_n(weight, n=10) %>% arrange(desc(weight))
top_male
top_male <- hero_info %>% filter(gender == "Male") %>% top_n(count(eye_color), n=3)
top_male <- hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
top_n(n=3)
top_male
top_male <- hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
top_n(n=4)
top_male
hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
top_n(n=4)
hero_info %>% filter(gender == "Female") %>% count(eye_color) %>%
top_n(n=4)
hero %>% select(hero_names,publisher,flight,weight) %>% filter(flight=="True") %>%
top_n(weight, n=10) %>% arrange(desc(weight))
#Exercícios do livro de Visualização de Dados em R do Sillas Gonzaga
#Questão 0 - Carregando bibliotecas
library(tidyverse)
library(janitor)
library(dplyr)
library(readr)
library(tibble)
#Q1- Carregando bases de dados
hero_powers <- read.csv('super_hero_powers.csv',na=c("","-","NA"))
hero_info <- read.csv('heroes_information.csv',na=c("","-","NA"))
#Q2 - Limpando nomes das colunas
names(hero_powers)
names(hero_info)
hero_powers <- clean_names(hero_powers)
hero_info <- clean_names(hero_info)
#Q3 - Remover a primeira coluna de hero_info
select(hero_info,-1)
#Qu4 - Converter todas as colunas com exceção da primeira para o tipo logical
hero_powers_logical <- hero_powers %>% select(-1) %>% mutate_all(as.logical)
#Q5 - Agrupar as editoras em Marvel, DC e Outros
glimpse(hero_info)
hero_info %>% distinct(publisher)
hero_info <- hero_info %>%
mutate(publisher = case_when( publisher == "Marvel Comics" ~ "Marvel",
publisher == "DC Comics" ~ "DC",
publisher != c("Marvel Comics","DC Comics") ~ "Outros"
))
hero_info %>% count(publisher)
#Q6 - Definir quais são as raças exclusivas de cada editora
race_dc <- hero_info %>% filter(publisher == "DC") %>% distinct(race)
race_marvel <- hero_info %>% filter(publisher == "Marvel") %>% distinct(race)
#Q7- Filtar o top 3 de cores de olhos mais comuns para cada sexo
#Homens
hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
top_n(n=4)
#Mulheres
hero_info %>% filter(gender == "Female") %>% count(eye_color) %>%
top_n(n=4)
#Q8 - Calcule o percentual de hérois que possuem cada habilidade descrita nas colunas
hab <- hero_powers_logical %>% select(-1) %>% summarise_if(is.logical, sum)
t(hab)*100/nrow(hero_powers)
#Q9 - Repita o item anterior com uma abordagem tidy
hero_powers %>%
gather("poder","possui_poder",-hero_names) %>%
group_by(poder, possui_poder) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n) * 100)
#Q10 - Junte os dataframes hero_powers e hero_info em um chamado hero usando inner_join
names(hero_info)[2] <- "hero_names"
(hero <- inner_join(hero_info,hero_powers,by="hero_names"))
#Q11 - No dataframe hero, calcule o percentual de herois de cada editora que são telepatas
telepatas <- hero %>% filter(telepathy=="True") %>% group_by(publisher) %>%
summarise(n = n()) %>% mutate(freq_telepathy = n / sum(n))
#Q12 - No dataframe hero, selecione as colunas name, publisher, flight e weight, filtre os heróis que podem voar e retorne os 10 de maior peso.
hero %>% select(hero_names,publisher,flight,weight) %>% filter(flight=="True") %>%
top_n(weight, n=10) %>% arrange(desc(weight))
#Q13 - Salve o dataframe chamado hero no arquivo herois_completo.csv usando a função write_csv()
write_csv(x = hero,path = "herois_completo.csv")
#Exercícios do livro de Visualização de Dados em R do Sillas Gonzaga
#Questão 0 - Carregando bibliotecas
library(tidyverse)
library(janitor)
library(dplyr)
library(readr)
library(tibble)
#Q1- Carregando bases de dados
hero_powers <- read.csv('super_hero_powers.csv',na=c("","-","NA"))
hero_info <- read.csv('heroes_information.csv',na=c("","-","NA"))
#Q2 - Limpando nomes das colunas
names(hero_powers)
names(hero_info)
hero_powers <- clean_names(hero_powers)
hero_info <- clean_names(hero_info)
#Q3 - Remover a primeira coluna de hero_info
select(hero_info,-1)
#Qu4 - Converter todas as colunas com exceção da primeira para o tipo logical
hero_powers_logical <- hero_powers %>% select(-1) %>% mutate_all(as.logical)
#Q5 - Agrupar as editoras em Marvel, DC e Outros
glimpse(hero_info)
hero_info %>% distinct(publisher)
hero_info <- hero_info %>%
mutate(publisher = case_when( publisher == "Marvel Comics" ~ "Marvel",
publisher == "DC Comics" ~ "DC",
publisher != c("Marvel Comics","DC Comics") ~ "Outros"
))
hero_info %>% count(publisher)
#Q6 - Definir quais são as raças exclusivas de cada editora
race_dc <- hero_info %>% filter(publisher == "DC") %>% distinct(race)
race_marvel <- hero_info %>% filter(publisher == "Marvel") %>% distinct(race)
#Q7- Filtar o top 3 de cores de olhos mais comuns para cada sexo
#Homens
hero_info %>% filter(gender == "Male") %>% count(eye_color) %>%
top_n(n=4)
#Mulheres
hero_info %>% filter(gender == "Female") %>% count(eye_color) %>%
top_n(n=4)
#Q8 - Calcule o percentual de hérois que possuem cada habilidade descrita nas colunas
hab <- hero_powers_logical %>% select(-1) %>% summarise_if(is.logical, sum)
t(hab)*100/nrow(hero_powers)
#Q9 - Repita o item anterior com uma abordagem tidy
hero_powers %>%
gather("poder","possui_poder",-hero_names) %>%
group_by(poder, possui_poder) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n) * 100)
#Q10 - Junte os dataframes hero_powers e hero_info em um chamado hero usando inner_join
names(hero_info)[2] <- "hero_names"
(hero <- inner_join(hero_info,hero_powers,by="hero_names"))
#Q11 - No dataframe hero, calcule o percentual de herois de cada editora que são telepatas
telepatas <- hero %>% filter(telepathy=="True") %>% group_by(publisher) %>%
summarise(n = n()) %>% mutate(freq_telepathy = n / sum(n))
#Q12 - No dataframe hero, selecione as colunas name, publisher, flight e weight, filtre os heróis que podem voar e retorne os 10 de maior peso.
hero %>% select(hero_names,publisher,flight,weight) %>% filter(flight=="True") %>%
top_n(weight, n=10) %>% arrange(desc(weight))
#Q13 - Salve o dataframe chamado hero no arquivo herois_completo.csv usando a função write_csv()
write_csv(x = hero,file = "herois_completo.csv")
